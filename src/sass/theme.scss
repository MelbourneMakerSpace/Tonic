@use '~@angular/material' as mat;
@import '~@angular/material/theming';
// Plus imports for other components in your app.

//tonic-green generated at http://mcg.mbitson.com/#!?tonicgreen=%233ea849&themename=tonic-greeen with material 2 export
$tonic-green: (
  50: #e8f5e9,
  100: #c5e5c8,
  200: #9fd4a4,
  300: #78c280,
  400: #5bb564,
  500: #3ea849,
  600: #38a042,
  700: #309739,
  800: #288d31,
  900: #1b7d21,
  A100: #b7ffbb,
  A200: #f4d804,
  A400: #51ff5a,
  A700: #37ff42,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://www.google.com/design/spec/style/color.html
$tonic-app-primary: mat.define-palette($tonic-green);
$tonic-app-accent: mat.define-palette($tonic-green, A200, A100, A400);
// The warn palette is optional (defaults to red).
$tonic-app-warn: mat.define-palette(mat.$red-palette);
// Create the theme object (a Sass map containing all of the palettes).
$tonic-app-theme: mat.define-light-theme(
  $tonic-app-primary,
  $tonic-app-accent,
  $tonic-app-warn
);
@include mat.all-component-themes($tonic-app-theme);
.bggray {
  background-color: #e1e2e1;
}
.bglightgray {
  background-color: #ffffff;
}
.bgdark {
  background-color: map-get($tonic-green, 900);
}
.bgprimary {
  background-color: map-get($tonic-green, 500);
}
.trHover:hover {
  background-color: #e1e2e1;
}

.extraButtons button {
  margin-left: 10px;
}
